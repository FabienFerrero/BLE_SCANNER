[{"id":"fc5f3a67.7e34f8","type":"mqtt in","z":"68f74293.e4df8c","name":"rf210-15-abp","topic":"v3/imredd@ttn/devices/rf210-15-abp/up","qos":"2","datatype":"json","broker":"38d0a5bf.c9829a","x":250,"y":120,"wires":[["92caecb6.f530f","d987c851.77a198"]]},{"id":"91f7cb9e.d9b6b8","type":"influxdb out","z":"68f74293.e4df8c","influxdb":"1abb2b94.cfcc04","name":"","measurement":"rf210-15-abp","precision":"","retentionPolicy":"","database":"","retentionPolicyV18Flux":"","org":"","bucket":"","x":560,"y":140,"wires":[]},{"id":"d2aec1c3.b585b","type":"debug","z":"68f74293.e4df8c","name":"15","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":870,"y":160,"wires":[]},{"id":"92caecb6.f530f","type":"change","z":"68f74293.e4df8c","name":"change","rules":[{"t":"move","p":"payload.uplink_message.decoded_payload","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":200,"wires":[["91f7cb9e.d9b6b8"]]},{"id":"e87fbe48.e6d9d","type":"mqtt in","z":"68f74293.e4df8c","name":"rf210-14-abp","topic":"v3/imredd@ttn/devices/rf210-14-abp/up","qos":"2","datatype":"json","broker":"38d0a5bf.c9829a","x":230,"y":340,"wires":[["8d9e660e.d22028","9dd398e5.69c2b8","fc13c9fd.dad6d8"]]},{"id":"62ce424a.9f887c","type":"influxdb out","z":"68f74293.e4df8c","influxdb":"1abb2b94.cfcc04","name":"","measurement":"rf210-14-abp","precision":"","retentionPolicy":"","database":"","retentionPolicyV18Flux":"","org":"","bucket":"","x":540,"y":340,"wires":[]},{"id":"8d9e660e.d22028","type":"debug","z":"68f74293.e4df8c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":350,"y":300,"wires":[]},{"id":"9dd398e5.69c2b8","type":"change","z":"68f74293.e4df8c","name":"change","rules":[{"t":"move","p":"payload.uplink_message.decoded_payload","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":420,"wires":[["62ce424a.9f887c"]]},{"id":"d987c851.77a198","type":"function","z":"68f74293.e4df8c","name":"Decrypt Payload","func":"var BLEadd15=[];\nBLEadd15 = flow.get('BLEadd15');\nvar BLEadd14=[];\nBLEadd14 = flow.get('BLEadd14'); \nvar BLEadd=[];\nBLEadd = flow.get('BLEadd');\n\nvar msg1= {};\nvar time= msg.payload.uplink_message.rx_metadata[0].time;\n\n// msg2 - Decrypt to Text\nvar msg2= {};\nvar msg3= {};\n\nif( msg.payload.uplink_message.f_port==4) {\n\n\nvar test = msg.payload.uplink_message.frm_payload;\n\nlet down = 0;\ntest = new Buffer(test, 'base64').toString('hex');\nmsg2.payload = test;\nnbad = test.length / 12;\n\nfor (let pas = 0; pas < nbad; pas++) {\nvar test3 = test.slice(pas*12, 11+pas*12);\n\nif(BLEadd15.indexOf(test3) == -1){\nBLEadd15.push(test3);}\n\nif(BLEadd14.indexOf(test3) != -1){\nBLEadd.push(test3);\ndown++;\nvar index = BLEadd14.indexOf(test3);\nBLEadd14.splice( index, 1 );\n}\n}\n\n\nmsg1.payload = BLEadd15;\nmsg2.payload = BLEadd;\nlet l15 = BLEadd15.length;\nlet ltot = BLEadd.length;\n\nflow.set(\"BLEadd14\",BLEadd14); // to store a variable}\nflow.set(\"BLEadd15\",BLEadd15); // to store a variable}\nflow.set(\"BLEadd\",BLEadd); // to store a variable}\nmsg3.payload = {l15, ltot,down};\n\n\nreturn [ msg1, msg2,msg3];\n\n}","outputs":3,"noerr":0,"initialize":"","finalize":"","x":520,"y":220,"wires":[["228d4f50.c2a6a"],["d2aec1c3.b585b"],["91f7cb9e.d9b6b8"]]},{"id":"743464c2.d356ac","type":"file","z":"68f74293.e4df8c","d":true,"name":"","filename":"bletest.txt","appendNewline":false,"createDir":false,"overwriteFile":"false","x":880,"y":220,"wires":[[]]},{"id":"228d4f50.c2a6a","type":"csv","z":"68f74293.e4df8c","d":true,"name":"To CSV","sep":"\\t","hdrin":"","hdrout":"","multi":"one","ret":"\\n","temp":"time,test2","skip":0,"strings":true,"include_empty_strings":false,"include_null_values":false,"x":720,"y":260,"wires":[["743464c2.d356ac"]]},{"id":"fc13c9fd.dad6d8","type":"function","z":"68f74293.e4df8c","name":"Decrypt Payload","func":"var BLEadd15=[];\n BLEadd15 = flow.get('BLEadd15');\nvar BLEadd14=[];\n BLEadd14 = flow.get('BLEadd14'); \nvar BLEadd=[];\n BLEadd = flow.get('BLEadd');\n\nvar msg1= {};\nvar time= msg.payload.uplink_message.rx_metadata[0].time;\n\n// msg2 - Decrypt to Text\nvar msg2= {};\nvar msg3= {};\nif( msg.payload.uplink_message.f_port==4) {\n\n\nvar test = msg.payload.uplink_message.frm_payload;\nvar up=0;\n\ntest = new Buffer(test, 'base64').toString('hex');\nmsg2.payload = test;\nnbad = test.length / 12;\n\nfor (let pas = 0; pas < nbad; pas++) {\nvar test3 = test.slice(pas*12, 11+pas*12);\n\nif(BLEadd14.indexOf(test3) == -1){\nBLEadd14.push(test3);}\n\nif(BLEadd15.indexOf(test3) != -1){\n    up++; \n    BLEadd.push(test3);\n    var index = BLEadd15.indexOf(test3);\n    BLEadd15.splice( index, 1 );\n   \n    }\n}\nvar l14 = BLEadd14.length;\nvar ltot = BLEadd.length;\nmsg1.payload = BLEadd14;\nflow.set(\"BLEadd14\",BLEadd14); // to store a variable}\nflow.set(\"BLEadd15\",BLEadd15); // to store a variable}\nflow.set(\"BLEadd\",BLEadd); // to store a variable}\nmsg2.payload = BLEadd;\nmsg3.payload = {l14, ltot,up};\n\n\nreturn [ msg1, msg2,msg3 ];\n\n}","outputs":3,"noerr":0,"initialize":"","finalize":"","x":540,"y":420,"wires":[[],["4cba4972.13b3c8"],["62ce424a.9f887c"]]},{"id":"4cba4972.13b3c8","type":"debug","z":"68f74293.e4df8c","name":"14","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":420,"wires":[]},{"id":"38d0a5bf.c9829a","type":"mqtt-broker","name":"","broker":"eu1.cloud.thethings.network","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"1abb2b94.cfcc04","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"sensor","name":"","usetls":false,"tls":"db45ef78.d1fcd","influxdbVersion":"1.x","url":"http://localhost:8086","rejectUnauthorized":true},{"id":"db45ef78.d1fcd","type":"tls-config","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","servername":"eu1.cloud.thethings.network:8883","verifyservercert":false}]